var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import { styled } from '@storybook/theming';
import { getPrimaryColor, getInverseTextColor, getBorderColor, } from '../../helper';
var StyledButton = styled.button(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  outline: none;\n  cursor: pointer;\n  margin: 0.5rem 0.25rem;\n  border: 0;\n  border-radius: 3em;\n  padding: 0.75rem 1rem;\n  text-align: center;\n  transition: all 150ms ease-out;\n  font-size: 13px;\n  font-weight: 700;\n  line-height: 1;\n  color: ", ";\n  background: transparent;\n  border: 1px solid ", ";\n\n  &:hover {\n    background: ", ";\n    border-color: ", ";\n    color: ", ";\n  }\n\n  &:active {\n    color: ", ";\n    background: ", ";\n    color: ", ";\n  }\n\n  svg {\n    display: inline-block;\n    height: 16px;\n    width: 16px;\n    vertical-align: top;\n    margin-right: 6px;\n    margin-top: -1px;\n    margin-bottom: -1px;\n    pointer-events: none;\n  }\n"], ["\n  outline: none;\n  cursor: pointer;\n  margin: 0.5rem 0.25rem;\n  border: 0;\n  border-radius: 3em;\n  padding: 0.75rem 1rem;\n  text-align: center;\n  transition: all 150ms ease-out;\n  font-size: 13px;\n  font-weight: 700;\n  line-height: 1;\n  color: ", ";\n  background: transparent;\n  border: 1px solid ", ";\n\n  &:hover {\n    background: ", ";\n    border-color: ", ";\n    color: ", ";\n  }\n\n  &:active {\n    color: ", ";\n    background: ", ";\n    color: ", ";\n  }\n\n  svg {\n    display: inline-block;\n    height: 16px;\n    width: 16px;\n    vertical-align: top;\n    margin-right: 6px;\n    margin-top: -1px;\n    margin-bottom: -1px;\n    pointer-events: none;\n  }\n"])), getPrimaryColor, getPrimaryColor, getBorderColor, getBorderColor, getInverseTextColor, getInverseTextColor, getPrimaryColor, getInverseTextColor);
export default StyledButton;
var templateObject_1;
