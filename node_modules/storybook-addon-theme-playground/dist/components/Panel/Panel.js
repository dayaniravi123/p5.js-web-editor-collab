import React, { useContext } from 'react';
import { Icons } from '@storybook/components';
import { SettingsContext } from '../../contexts/SettingsProvider';
import Code from '../Code/Code';
import SettingsItem from '../SettingsItem/SettingsItem';
import Loading from '../Loading/Loading';
import RadioGroup from '../RadioGroup/RadioGroup';
import StyledPanel from './Panel.style';
import Button from '../Button/Button';
var Panel = function () {
    var _a = useContext(SettingsContext), themes = _a.themes, _b = _a.activeTheme, theme = _b.theme, name = _b.name, updateActiveTheme = _a.updateActiveTheme, config = _a.config, resetThemes = _a.resetThemes;
    return (React.createElement(StyledPanel, null, Object.entries(theme).length > 0 && (React.createElement(React.Fragment, null,
        React.createElement("div", { className: "panel__content" },
            themes.length > 1 && (React.createElement("div", { className: "panel__themes" },
                React.createElement(RadioGroup, { label: "Active Theme", name: "themes", value: name, onChange: function (val) {
                        return updateActiveTheme(themes.filter(function (t) { return t.name === val; })[0]);
                    }, options: themes.map(function (t) { return ({
                        label: t.name,
                        value: t.name,
                    }); }) }))),
            React.createElement(SettingsItem, null),
            config.showCode && React.createElement(Code, { value: theme }),
            React.createElement("div", { className: "panel__settings-wrapper" },
                React.createElement("div", { className: "panel__settings" },
                    React.createElement(Loading, null),
                    React.createElement("div", { className: "panel__buttons" },
                        React.createElement(Button, { onClick: function () { return resetThemes(); } },
                            React.createElement(Icons, { icon: "undo" }),
                            "Reset")))))))));
};
export default Panel;
