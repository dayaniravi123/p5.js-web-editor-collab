import { API } from '@storybook/api';
import { ReactNode } from 'react';
export declare type ThemeObject = {
    name: string;
    theme: object;
};
export declare type ThemesArray = ThemeObject[];
export declare type LabelFormatFunction = (path: string[]) => string;
export declare type ConfigProps = {
    labelFormat?: 'startCase' | 'path' | LabelFormatFunction;
    showCode?: boolean;
    debounce?: boolean;
    debounceRate?: number;
};
export declare type OptionsType = {
    theme: any;
    overrides: OverridesProps;
    config: ConfigProps;
};
export declare type OverridesProps = {
    [key: string]: {
        type: 'color' | 'counter' | 'select' | 'shorthand' | 'switch' | 'radio' | 'range';
        hidden?: boolean;
        label?: string;
        description?: string;
        min?: number;
        max?: number;
        steps?: number;
        options?: {
            value: string | number;
            label: string;
        }[];
    };
};
export declare type SettingsProviderProps = {
    api: API;
    children: ReactNode;
};
export declare type SettingsContextProps = {
    themes: ThemesArray;
    activeTheme: ThemeObject;
    themeComponents: any;
    overrides: OverridesProps;
    config: ConfigProps;
    isLoading: boolean;
    updateTheme: (path: string, value: any) => void;
    updateActiveTheme: (obj: ThemeObject) => void;
    resetThemes: () => void;
};
