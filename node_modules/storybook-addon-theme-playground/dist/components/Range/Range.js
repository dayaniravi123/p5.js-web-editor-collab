import React from 'react';
import StyledRange from './Range.style';
import Label from '../Label/Label';
var Range = function (_a) {
    var iconBefore = _a.iconBefore, value = _a.value, label = _a.label, onChange = _a.onChange, _b = _a.min, min = _b === void 0 ? 0 : _b, _c = _a.max, max = _c === void 0 ? 100 : _c, _d = _a.steps, steps = _d === void 0 ? 1 : _d, description = _a.description, suffix = _a.suffix;
    var updateValue = function (val) {
        if (onChange)
            onChange(val, suffix);
    };
    var handleChange = function (event) {
        var _a = event.target, eventValue = _a.value, validity = _a.validity;
        if (validity.valid) {
            if (eventValue !== '') {
                updateValue(parseFloat(eventValue));
            }
            else {
                updateValue(0);
            }
        }
    };
    var handleBlur = function (event) {
        var eventValue = event.target.value;
        var numberValue = parseFloat(eventValue);
        if (numberValue > max) {
            updateValue(max);
        }
        else if (numberValue < min) {
            updateValue(min);
        }
    };
    return (React.createElement(StyledRange, { htmlFor: label },
        React.createElement(Label, { iconBefore: iconBefore, label: label, description: description }),
        React.createElement("span", null,
            React.createElement("input", { type: "text", pattern: "[0-9.]*", value: value, onChange: handleChange, onBlur: handleBlur }),
            suffix),
        React.createElement("input", { type: "range", step: steps, min: min, max: max, value: value, onChange: function (e) { return updateValue(parseFloat(e.target.value)); } })));
};
export default Range;
